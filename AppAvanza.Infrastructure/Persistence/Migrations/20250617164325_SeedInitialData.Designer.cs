// <auto-generated />
using System;
using AppAvanza.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppAvanza.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(AppAvanzaDbContext))]
    [Migration("20250617164325_SeedInitialData")]
    partial class SeedInitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppAvanza.Domain.Entities.ActividadSemanal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescripcionPractica")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("DiaSemana")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LogroEsperado")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("NivelId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("NivelId");

                    b.ToTable("ActividadesSemanales");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DescripcionPractica = "Juegos con tarjetas de palabras (memory, emparejar imagen-palabra). Presentación de nuevas letras/sonidos con apoyo visual y gestual. Canciones de fonemas.",
                            DiaSemana = "Lunes",
                            LogroEsperado = "Identificar nuevas palabras y asociar sonidos con letras presentadas.",
                            NivelId = 1,
                            Titulo = "Taller de Palabras y Sonidos"
                        },
                        new
                        {
                            Id = 2,
                            DescripcionPractica = "Ejercicios de grafomotricidad en pizarra, papel grande y fichas. Uso de diferentes materiales (tizas, ceras, rotuladores gruesos).",
                            DiaSemana = "Lunes",
                            LogroEsperado = "Mejorar la coordinación viso-motora y la correcta direccionalidad del trazo.",
                            NivelId = 1,
                            Titulo = "Mis Primeros Trazos"
                        },
                        new
                        {
                            Id = 3,
                            DescripcionPractica = "Contar objetos cotidianos (juguetes, lápices). Juegos de clasificación por color/forma/tamaño. Puzzles numéricos sencillos. Introducción a la recta numérica (hasta 10).",
                            DiaSemana = "Martes",
                            LogroEsperado = "Practicar el conteo y reconocer números en diferentes contextos.",
                            NivelId = 1,
                            Titulo = "Aventura Numérica"
                        },
                        new
                        {
                            Id = 4,
                            DescripcionPractica = "Observación de láminas o vídeos sobre temas de interés (animales, transportes). Conversación guiada. Dibujo libre sobre lo observado.",
                            DiaSemana = "Martes",
                            LogroEsperado = "Ampliar vocabulario y conocimiento del medio cercano.",
                            NivelId = 1,
                            Titulo = "Exploradores del Entorno"
                        },
                        new
                        {
                            Id = 5,
                            DescripcionPractica = "Actividades de manualidades (rasgado, pegado, pintura de dedos, modelado con plastilina) relacionadas con la letra o tema de la semana.",
                            DiaSemana = "Miercoles",
                            LogroEsperado = "Desarrollar la motricidad fina y la creatividad.",
                            NivelId = 1,
                            Titulo = "Creamos con las Manos"
                        },
                        new
                        {
                            Id = 6,
                            DescripcionPractica = "Lectura compartida de cuentos con pictogramas o imágenes muy claras. Preguntas sencillas sobre la historia.",
                            DiaSemana = "Miercoles",
                            LogroEsperado = "Fomentar el gusto por la lectura y la comprensión oral.",
                            NivelId = 1,
                            Titulo = "Leemos Juntos"
                        },
                        new
                        {
                            Id = 7,
                            DescripcionPractica = "Encontrar diferencias, seguir series de colores o formas, rompecabezas sencillos. Juegos de mesa adaptados (oca, parchís simplificado).",
                            DiaSemana = "Jueves",
                            LogroEsperado = "Estimular el razonamiento lógico y la percepción visual.",
                            NivelId = 1,
                            Titulo = "Juegos de Lógica y Percepción"
                        },
                        new
                        {
                            Id = 8,
                            DescripcionPractica = "Práctica de la escritura del nombre. Copia de palabras sencillas trabajadas. Rellenar letras punteadas.",
                            DiaSemana = "Jueves",
                            LogroEsperado = "Avanzar en la escritura del nombre y palabras significativas.",
                            NivelId = 1,
                            Titulo = "Escribo mi Nombre y Palabras"
                        },
                        new
                        {
                            Id = 9,
                            DescripcionPractica = "Repaso lúdico de los conceptos de la semana (canciones, juegos interactivos en pizarra digital). Entrega y explicación de tareas para casa (fichas sencillas).",
                            DiaSemana = "Viernes",
                            LogroEsperado = "Consolidar lo aprendido y establecer un puente con el hogar.",
                            NivelId = 1,
                            Titulo = "Celebramos lo Aprendido"
                        },
                        new
                        {
                            Id = 10,
                            DescripcionPractica = "Juego libre en rincones temáticos (cocinita, médicos, construcciones) fomentando la interacción y el lenguaje espontáneo.",
                            DiaSemana = "Viernes",
                            LogroEsperado = "Desarrollar habilidades sociales y de comunicación en un contexto lúdico.",
                            NivelId = 1,
                            Titulo = "Rincón de Juego Simbólico"
                        },
                        new
                        {
                            Id = 11,
                            DescripcionPractica = "Búsqueda de palabras con sílabas inversas o mixtas en textos cortos. Formación de palabras con tarjetas de sílabas. Juegos de 'veo-veo' fonético.",
                            DiaSemana = "Lunes",
                            LogroEsperado = "Afianzar la lectura y escritura de sílabas complejas.",
                            NivelId = 2,
                            Titulo = "Detectives de Palabras"
                        },
                        new
                        {
                            Id = 12,
                            DescripcionPractica = "Escritura de frases sencillas a partir de una imagen o tema. Inicio de la escritura de pequeños textos (2-3 frases) con coherencia.",
                            DiaSemana = "Lunes",
                            LogroEsperado = "Desarrollar la capacidad de expresar ideas por escrito.",
                            NivelId = 2,
                            Titulo = "Creamos Historias"
                        },
                        new
                        {
                            Id = 13,
                            DescripcionPractica = "Ejercicios de suma y resta con apoyo manipulativo (ábaco, regletas) y en papel. Introducción a problemas con enunciado corto.",
                            DiaSemana = "Martes",
                            LogroEsperado = "Consolidar el cálculo básico y la resolución de problemas.",
                            NivelId = 2,
                            Titulo = "Calculamos y Resolvemos"
                        },
                        new
                        {
                            Id = 14,
                            DescripcionPractica = "Proyectos temáticos sencillos (el espacio, los inventos, el cuerpo humano). Búsqueda de información en libros adaptados o internet (guiada).",
                            DiaSemana = "Martes",
                            LogroEsperado = "Ampliar conocimientos sobre el mundo y fomentar la curiosidad.",
                            NivelId = 2,
                            Titulo = "Viajeros del Conocimiento"
                        },
                        new
                        {
                            Id = 15,
                            DescripcionPractica = "Experimentos científicos sencillos y seguros. Actividades de construcción (Lego, material reciclado) siguiendo un plan.",
                            DiaSemana = "Miercoles",
                            LogroEsperado = "Fomentar el pensamiento científico y la creatividad aplicada.",
                            NivelId = 2,
                            Titulo = "Laboratorio de Ideas"
                        },
                        new
                        {
                            Id = 16,
                            DescripcionPractica = "Lectura individual silenciosa de libros adecuados a su nivel. Fichas de comprensión lectora sencillas (dibujar, responder V/F).",
                            DiaSemana = "Miercoles",
                            LogroEsperado = "Mejorar la fluidez y comprensión lectora autónoma.",
                            NivelId = 2,
                            Titulo = "Biblioteca Activa"
                        },
                        new
                        {
                            Id = 17,
                            DescripcionPractica = "Juegos de mesa que impliquen estrategia (damas, conecta 4). Sudokus infantiles. Problemas de lógica visual.",
                            DiaSemana = "Jueves",
                            LogroEsperado = "Desarrollar el pensamiento estratégico y la resolución de problemas.",
                            NivelId = 2,
                            Titulo = "Mente en Juego"
                        },
                        new
                        {
                            Id = 18,
                            DescripcionPractica = "Escritura de un diario personal (frases sencillas sobre su día). Invención de finales para cuentos conocidos. Uso incipiente de mayúsculas y punto.",
                            DiaSemana = "Jueves",
                            LogroEsperado = "Practicar la escritura creativa y funcional.",
                            NivelId = 2,
                            Titulo = "Pequeños Escritores"
                        },
                        new
                        {
                            Id = 19,
                            DescripcionPractica = "Presentación de los trabajos o proyectos de la semana. Pequeños debates sobre temas de interés. Autoevaluación y coevaluación sencilla.",
                            DiaSemana = "Viernes",
                            LogroEsperado = "Compartir aprendizajes, expresar opiniones y reflexionar sobre el propio progreso.",
                            NivelId = 2,
                            Titulo = "Expo-Proyectos y Debate"
                        },
                        new
                        {
                            Id = 20,
                            DescripcionPractica = "Juegos cooperativos que requieran planificación y reparto de tareas. Resolución de acertijos en grupo.",
                            DiaSemana = "Viernes",
                            LogroEsperado = "Fomentar el trabajo en equipo y la comunicación.",
                            NivelId = 2,
                            Titulo = "Desafíos en Equipo"
                        },
                        new
                        {
                            Id = 21,
                            DescripcionPractica = "Lectura de novelas cortas o capítulos de libros. Tertulias literarias. Análisis de personajes y trama.",
                            DiaSemana = "Lunes",
                            LogroEsperado = "Fomentar la lectura crítica y el gusto por la literatura.",
                            NivelId = 3,
                            Titulo = "Club de Lectores Expertos"
                        },
                        new
                        {
                            Id = 22,
                            DescripcionPractica = "Creación de cuentos, poesías, noticias. Uso de diferentes técnicas narrativas. Planificación y revisión de textos.",
                            DiaSemana = "Lunes",
                            LogroEsperado = "Desarrollar la expresión escrita avanzada y la creatividad.",
                            NivelId = 3,
                            Titulo = "Taller de Escritura Creativa"
                        },
                        new
                        {
                            Id = 23,
                            DescripcionPractica = "Resolución de problemas con varias operaciones. Introducción a la multiplicación y división con material manipulativo y juegos. Geometría aplicada.",
                            DiaSemana = "Martes",
                            LogroEsperado = "Afianzar el cálculo avanzado y la resolución de problemas complejos.",
                            NivelId = 3,
                            Titulo = "Desafíos Matemáticos"
                        },
                        new
                        {
                            Id = 24,
                            DescripcionPractica = "Proyectos de investigación sobre temas de su interés. Búsqueda y selección de información. Elaboración de informes sencillos.",
                            DiaSemana = "Martes",
                            LogroEsperado = "Fomentar la autonomía en la búsqueda y gestión de información.",
                            NivelId = 3,
                            Titulo = "Pequeños Investigadores"
                        },
                        new
                        {
                            Id = 25,
                            DescripcionPractica = "Debates sobre temas actuales o dilemas morales adaptados. Análisis de noticias. Identificación de fake news (nivel básico).",
                            DiaSemana = "Miercoles",
                            LogroEsperado = "Desarrollar el pensamiento crítico y la argumentación.",
                            NivelId = 3,
                            Titulo = "Debate y Pensamiento Crítico"
                        },
                        new
                        {
                            Id = 26,
                            DescripcionPractica = "Proyectos que integren ciencia, tecnología, ingeniería, arte y matemáticas. Robótica educativa básica. Diseño de prototipos.",
                            DiaSemana = "Miercoles",
                            LogroEsperado = "Fomentar la creatividad, la innovación y el pensamiento computacional.",
                            NivelId = 3,
                            Titulo = "STEAM en Acción"
                        },
                        new
                        {
                            Id = 27,
                            DescripcionPractica = "Conocimiento de diferentes culturas. Proyectos sobre problemas sociales o medioambientales. Fomento de la empatía y la solidaridad.",
                            DiaSemana = "Jueves",
                            LogroEsperado = "Desarrollar la conciencia social y ciudadana.",
                            NivelId = 3,
                            Titulo = "Ciudadanos del Mundo"
                        },
                        new
                        {
                            Id = 28,
                            DescripcionPractica = "Uso de agendas. Planificación del estudio personal. Técnicas de estudio básicas (subrayado, esquemas).",
                            DiaSemana = "Jueves",
                            LogroEsperado = "Mejorar la organización y las estrategias de aprendizaje autónomo.",
                            NivelId = 3,
                            Titulo = "Organizo mi Aprendizaje"
                        },
                        new
                        {
                            Id = 29,
                            DescripcionPractica = "Exposición oral de los proyectos de investigación. Presentación de trabajos creativos. Portfolio de aprendizajes.",
                            DiaSemana = "Viernes",
                            LogroEsperado = "Comunicar eficazmente los aprendizajes y valorar el propio progreso.",
                            NivelId = 3,
                            Titulo = "Presentación de Talentos"
                        },
                        new
                        {
                            Id = 30,
                            DescripcionPractica = "Actividades de tutoría entre iguales (los más avanzados ayudan a otros). Proyectos colaborativos complejos.",
                            DiaSemana = "Viernes",
                            LogroEsperado = "Fomentar la colaboración, el liderazgo y la responsabilidad compartida.",
                            NivelId = 3,
                            Titulo = "Mentoría y Colaboración"
                        });
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.Aprendiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FacilitadorId")
                        .HasColumnType("int");

                    b.Property<int>("NivelActualId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("FacilitadorId");

                    b.HasIndex("NivelActualId");

                    b.ToTable("Aprendices");
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.ElementoParkingFrustracion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aparcado")
                        .HasColumnType("bit");

                    b.Property<int>("AprendizId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AprendizId");

                    b.ToTable("ElementosParkingFrustracion");
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.HitoDeDominio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("NivelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NivelId");

                    b.ToTable("HitosDeDominio");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Area = "Lectoescritura",
                            Descripcion = "Reconoce al instante un banco de 40-50 palabras funcionales (globales).",
                            NivelId = 1
                        },
                        new
                        {
                            Id = 2,
                            Area = "Lectoescritura",
                            Descripcion = "Asocia el sonido con la grafía de las vocales y algunas consonantes clave (m, p, l, s, t, d, n, f, r suave).",
                            NivelId = 1
                        },
                        new
                        {
                            Id = 3,
                            Area = "Lectoescritura",
                            Descripcion = "Comienza a leer y escribir sílabas directas (consonante-vocal).",
                            NivelId = 1
                        },
                        new
                        {
                            Id = 4,
                            Area = "Lectoescritura",
                            Descripcion = "Lee y escribe palabras sencillas con sílabas directas.",
                            NivelId = 1
                        },
                        new
                        {
                            Id = 5,
                            Area = "Lectoescritura",
                            Descripcion = "Comprende frases cortas y sencillas apoyadas en imágenes.",
                            NivelId = 1
                        },
                        new
                        {
                            Id = 6,
                            Area = "Lectoescritura",
                            Descripcion = "Realiza trazos preparatorios para la escritura (líneas, círculos, bucles) con direccionalidad adecuada.",
                            NivelId = 1
                        },
                        new
                        {
                            Id = 7,
                            Area = "Lectoescritura",
                            Descripcion = "Escribe su nombre con apoyo (modelo o reseguir).",
                            NivelId = 1
                        },
                        new
                        {
                            Id = 8,
                            Area = "Matematicas",
                            Descripcion = "Cuenta hasta 20-30 y reconoce los números del 1 al 10 (cantidad y grafía).",
                            NivelId = 1
                        },
                        new
                        {
                            Id = 9,
                            Area = "Matematicas",
                            Descripcion = "Asocia cantidad con número (hasta 10).",
                            NivelId = 1
                        },
                        new
                        {
                            Id = 10,
                            Area = "Matematicas",
                            Descripcion = "Realiza seriaciones sencillas con dos o tres elementos.",
                            NivelId = 1
                        },
                        new
                        {
                            Id = 11,
                            Area = "Matematicas",
                            Descripcion = "Clasifica objetos por un atributo (color, forma, tamaño).",
                            NivelId = 1
                        },
                        new
                        {
                            Id = 12,
                            Area = "Matematicas",
                            Descripcion = "Comprende conceptos básicos espaciales (arriba/abajo, dentro/fuera, cerca/lejos) y temporales (antes/después, día/noche).",
                            NivelId = 1
                        },
                        new
                        {
                            Id = 13,
                            Area = "Matematicas",
                            Descripcion = "Inicia la resolución de problemas sencillos de juntar o quitar (manipulativo, hasta 5).",
                            NivelId = 1
                        },
                        new
                        {
                            Id = 14,
                            Area = "Actitud",
                            Descripcion = "Muestra curiosidad y disposición para participar en las actividades.",
                            NivelId = 1
                        },
                        new
                        {
                            Id = 15,
                            Area = "Actitud",
                            Descripcion = "Mantiene la atención en tareas cortas (5-10 minutos) con apoyo.",
                            NivelId = 1
                        },
                        new
                        {
                            Id = 16,
                            Area = "Actitud",
                            Descripcion = "Tolera la frustración en pequeños retos con ayuda del adulto.",
                            NivelId = 1
                        },
                        new
                        {
                            Id = 17,
                            Area = "Autonomia",
                            Descripcion = "Sigue instrucciones sencillas de dos o tres pasos.",
                            NivelId = 1
                        },
                        new
                        {
                            Id = 18,
                            Area = "Autonomia",
                            Descripcion = "Es capaz de organizar su material de trabajo inmediato con supervisión.",
                            NivelId = 1
                        },
                        new
                        {
                            Id = 19,
                            Area = "Autonomia",
                            Descripcion = "Pide ayuda cuando la necesita de forma adecuada.",
                            NivelId = 1
                        },
                        new
                        {
                            Id = 20,
                            Area = "Lectoescritura",
                            Descripcion = "Lee y escribe palabras con sílabas inversas (vocal-consonante) y mixtas (consonante-vocal-consonante).",
                            NivelId = 2
                        },
                        new
                        {
                            Id = 21,
                            Area = "Lectoescritura",
                            Descripcion = "Lee y escribe frases sencillas con significado completo (sujeto-verbo-complemento).",
                            NivelId = 2
                        },
                        new
                        {
                            Id = 22,
                            Area = "Lectoescritura",
                            Descripcion = "Comprende textos cortos (3-5 frases) y responde a preguntas literales sobre ellos.",
                            NivelId = 2
                        },
                        new
                        {
                            Id = 23,
                            Area = "Lectoescritura",
                            Descripcion = "Utiliza mayúsculas al inicio de frase y en nombres propios de forma incipiente.",
                            NivelId = 2
                        },
                        new
                        {
                            Id = 24,
                            Area = "Lectoescritura",
                            Descripcion = "Muestra interés por diferentes tipos de texto (cuentos, poesías, informativos adaptados).",
                            NivelId = 2
                        },
                        new
                        {
                            Id = 25,
                            Area = "Matematicas",
                            Descripcion = "Cuenta hasta 100 y reconoce números hasta el 50-100 (cantidad y grafía).",
                            NivelId = 2
                        },
                        new
                        {
                            Id = 26,
                            Area = "Matematicas",
                            Descripcion = "Realiza sumas y restas sencillas sin llevada (hasta el 20) de forma manipulativa y escrita.",
                            NivelId = 2
                        },
                        new
                        {
                            Id = 27,
                            Area = "Matematicas",
                            Descripcion = "Comprende el concepto de decena y unidad.",
                            NivelId = 2
                        },
                        new
                        {
                            Id = 28,
                            Area = "Matematicas",
                            Descripcion = "Resuelve problemas de suma y resta sencillos (enunciados cortos, con apoyo visual).",
                            NivelId = 2
                        },
                        new
                        {
                            Id = 29,
                            Area = "Matematicas",
                            Descripcion = "Identifica figuras geométricas básicas (círculo, cuadrado, triángulo, rectángulo) y cuerpos sencillos (cubo, esfera).",
                            NivelId = 2
                        },
                        new
                        {
                            Id = 30,
                            Area = "Matematicas",
                            Descripcion = "Maneja monedas de euro de bajo valor (1, 2, 5, 10, 20, 50 céntimos y 1, 2 euros) en contextos de juego.",
                            NivelId = 2
                        },
                        new
                        {
                            Id = 31,
                            Area = "Actitud",
                            Descripcion = "Muestra iniciativa en la elección de actividades y materiales.",
                            NivelId = 2
                        },
                        new
                        {
                            Id = 32,
                            Area = "Actitud",
                            Descripcion = "Persiste en tareas de mayor duración (15-20 minutos) con menor supervisión.",
                            NivelId = 2
                        },
                        new
                        {
                            Id = 33,
                            Area = "Actitud",
                            Descripcion = "Comienza a auto-corregir errores evidentes en sus trabajos.",
                            NivelId = 2
                        },
                        new
                        {
                            Id = 34,
                            Area = "Autonomia",
                            Descripcion = "Planifica tareas sencillas con ayuda (qué hacer primero, qué después).",
                            NivelId = 2
                        },
                        new
                        {
                            Id = 35,
                            Area = "Autonomia",
                            Descripcion = "Cuida sus materiales y es responsable de su espacio de trabajo.",
                            NivelId = 2
                        },
                        new
                        {
                            Id = 36,
                            Area = "Autonomia",
                            Descripcion = "Colabora en tareas grupales sencillas y respeta turnos.",
                            NivelId = 2
                        },
                        new
                        {
                            Id = 37,
                            Area = "Lectoescritura",
                            Descripcion = "Lee con fluidez y entonación adecuada textos narrativos e informativos sencillos.",
                            NivelId = 3
                        },
                        new
                        {
                            Id = 38,
                            Area = "Lectoescritura",
                            Descripcion = "Realiza inferencias sencillas y comprende el significado global de un texto.",
                            NivelId = 3
                        },
                        new
                        {
                            Id = 39,
                            Area = "Lectoescritura",
                            Descripcion = "Escribe textos narrativos y expositivos cortos con una estructura básica (inicio, desarrollo, fin).",
                            NivelId = 3
                        },
                        new
                        {
                            Id = 40,
                            Area = "Lectoescritura",
                            Descripcion = "Utiliza correctamente los signos de puntuación básicos (punto, coma, interrogación, exclamación).",
                            NivelId = 3
                        },
                        new
                        {
                            Id = 41,
                            Area = "Lectoescritura",
                            Descripcion = "Planifica la escritura de un texto (lluvia de ideas, esquema sencillo) y lo revisa con ayuda.",
                            NivelId = 3
                        },
                        new
                        {
                            Id = 42,
                            Area = "Matematicas",
                            Descripcion = "Domina las operaciones de suma y resta con llevadas.",
                            NivelId = 3
                        },
                        new
                        {
                            Id = 43,
                            Area = "Matematicas",
                            Descripcion = "Inicia el concepto de multiplicación y división (manipulativo y con apoyo gráfico).",
                            NivelId = 3
                        },
                        new
                        {
                            Id = 44,
                            Area = "Matematicas",
                            Descripcion = "Resuelve problemas de dos operaciones combinadas (suma y resta).",
                            NivelId = 3
                        },
                        new
                        {
                            Id = 45,
                            Area = "Matematicas",
                            Descripcion = "Utiliza unidades de medida convencionales (metro, litro, kilo) en contextos funcionales.",
                            NivelId = 3
                        },
                        new
                        {
                            Id = 46,
                            Area = "Matematicas",
                            Descripcion = "Interpreta gráficos sencillos (barras, pictogramas).",
                            NivelId = 3
                        },
                        new
                        {
                            Id = 47,
                            Area = "Actitud",
                            Descripcion = "Muestra una actitud proactiva y responsable hacia su aprendizaje.",
                            NivelId = 3
                        },
                        new
                        {
                            Id = 48,
                            Area = "Autonomia",
                            Descripcion = "Trabaja de forma autónoma durante periodos más largos (25-30 minutos).",
                            NivelId = 3
                        },
                        new
                        {
                            Id = 49,
                            Area = "Autonomia",
                            Descripcion = "Busca información de forma autónoma en fuentes variadas (diccionarios, internet con supervisión).",
                            NivelId = 3
                        },
                        new
                        {
                            Id = 50,
                            Area = "Actitud",
                            Descripcion = "Desarrolla estrategias para la resolución de conflictos de forma pacífica.",
                            NivelId = 3
                        },
                        new
                        {
                            Id = 51,
                            Area = "Actitud",
                            Descripcion = "Expresa sus emociones de forma asertiva y comprende las de los demás.",
                            NivelId = 3
                        });
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.Logro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AprendizId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AprendizId");

                    b.ToTable("Logros");
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.Nivel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ObjetivoCentral")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Niveles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Nivel 1: Cimientos y Confianza",
                            ObjetivoCentral = "Fomentar la seguridad en sí mismo y establecer las bases de la lectoescritura y el pensamiento matemático inicial."
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Nivel 2: Descubrimiento y Expansión",
                            ObjetivoCentral = "Ampliar el conocimiento del mundo, desarrollar la comprensión lectora y las habilidades matemáticas funcionales."
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Nivel 3: Consolidación y Despegue",
                            ObjetivoCentral = "Afianzar la autonomía en el aprendizaje, prepararse para retos académicos más complejos y fomentar el pensamiento crítico."
                        });
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.ProgresoHito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AprendizId")
                        .HasColumnType("int");

                    b.Property<bool>("Completado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCompletado")
                        .HasColumnType("datetime2");

                    b.Property<int>("HitoDeDominioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AprendizId");

                    b.HasIndex("HitoDeDominioId");

                    b.ToTable("ProgresosHitos");
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.RegistroDiario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AprendizId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("Id");

                    b.HasIndex("AprendizId");

                    b.ToTable("RegistrosDiarios");
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.ActividadSemanal", b =>
                {
                    b.HasOne("AppAvanza.Domain.Entities.Nivel", "Nivel")
                        .WithMany("ActividadesSemanales")
                        .HasForeignKey("NivelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nivel");
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.Aprendiz", b =>
                {
                    b.HasOne("AppAvanza.Domain.Entities.Usuario", "Facilitador")
                        .WithMany("Aprendices")
                        .HasForeignKey("FacilitadorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AppAvanza.Domain.Entities.Nivel", "NivelActual")
                        .WithMany("AprendicesEnEsteNivel")
                        .HasForeignKey("NivelActualId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Facilitador");

                    b.Navigation("NivelActual");
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.ElementoParkingFrustracion", b =>
                {
                    b.HasOne("AppAvanza.Domain.Entities.Aprendiz", "Aprendiz")
                        .WithMany("ElementosParking")
                        .HasForeignKey("AprendizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aprendiz");
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.HitoDeDominio", b =>
                {
                    b.HasOne("AppAvanza.Domain.Entities.Nivel", "Nivel")
                        .WithMany("HitosDeDominio")
                        .HasForeignKey("NivelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nivel");
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.Logro", b =>
                {
                    b.HasOne("AppAvanza.Domain.Entities.Aprendiz", "Aprendiz")
                        .WithMany("Logros")
                        .HasForeignKey("AprendizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aprendiz");
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.ProgresoHito", b =>
                {
                    b.HasOne("AppAvanza.Domain.Entities.Aprendiz", "Aprendiz")
                        .WithMany("ProgresosHitos")
                        .HasForeignKey("AprendizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppAvanza.Domain.Entities.HitoDeDominio", "HitoDeDominio")
                        .WithMany("ProgresosHitos")
                        .HasForeignKey("HitoDeDominioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aprendiz");

                    b.Navigation("HitoDeDominio");
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.RegistroDiario", b =>
                {
                    b.HasOne("AppAvanza.Domain.Entities.Aprendiz", "Aprendiz")
                        .WithMany("RegistrosDiarios")
                        .HasForeignKey("AprendizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aprendiz");
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.Aprendiz", b =>
                {
                    b.Navigation("ElementosParking");

                    b.Navigation("Logros");

                    b.Navigation("ProgresosHitos");

                    b.Navigation("RegistrosDiarios");
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.HitoDeDominio", b =>
                {
                    b.Navigation("ProgresosHitos");
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.Nivel", b =>
                {
                    b.Navigation("ActividadesSemanales");

                    b.Navigation("AprendicesEnEsteNivel");

                    b.Navigation("HitosDeDominio");
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Aprendices");
                });
#pragma warning restore 612, 618
        }
    }
}
