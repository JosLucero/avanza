// <auto-generated />
using System;
using AppAvanza.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppAvanza.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(AppAvanzaDbContext))]
    [Migration("20250617163926_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppAvanza.Domain.Entities.ActividadSemanal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescripcionPractica")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("DiaSemana")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LogroEsperado")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("NivelId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("NivelId");

                    b.ToTable("ActividadesSemanales");
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.Aprendiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FacilitadorId")
                        .HasColumnType("int");

                    b.Property<int>("NivelActualId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("FacilitadorId");

                    b.HasIndex("NivelActualId");

                    b.ToTable("Aprendices");
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.ElementoParkingFrustracion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aparcado")
                        .HasColumnType("bit");

                    b.Property<int>("AprendizId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AprendizId");

                    b.ToTable("ElementosParkingFrustracion");
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.HitoDeDominio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("NivelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NivelId");

                    b.ToTable("HitosDeDominio");
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.Logro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AprendizId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AprendizId");

                    b.ToTable("Logros");
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.Nivel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ObjetivoCentral")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Niveles");
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.ProgresoHito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AprendizId")
                        .HasColumnType("int");

                    b.Property<bool>("Completado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCompletado")
                        .HasColumnType("datetime2");

                    b.Property<int>("HitoDeDominioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AprendizId");

                    b.HasIndex("HitoDeDominioId");

                    b.ToTable("ProgresosHitos");
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.RegistroDiario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AprendizId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("Id");

                    b.HasIndex("AprendizId");

                    b.ToTable("RegistrosDiarios");
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.ActividadSemanal", b =>
                {
                    b.HasOne("AppAvanza.Domain.Entities.Nivel", "Nivel")
                        .WithMany("ActividadesSemanales")
                        .HasForeignKey("NivelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nivel");
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.Aprendiz", b =>
                {
                    b.HasOne("AppAvanza.Domain.Entities.Usuario", "Facilitador")
                        .WithMany("Aprendices")
                        .HasForeignKey("FacilitadorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AppAvanza.Domain.Entities.Nivel", "NivelActual")
                        .WithMany("AprendicesEnEsteNivel")
                        .HasForeignKey("NivelActualId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Facilitador");

                    b.Navigation("NivelActual");
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.ElementoParkingFrustracion", b =>
                {
                    b.HasOne("AppAvanza.Domain.Entities.Aprendiz", "Aprendiz")
                        .WithMany("ElementosParking")
                        .HasForeignKey("AprendizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aprendiz");
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.HitoDeDominio", b =>
                {
                    b.HasOne("AppAvanza.Domain.Entities.Nivel", "Nivel")
                        .WithMany("HitosDeDominio")
                        .HasForeignKey("NivelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nivel");
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.Logro", b =>
                {
                    b.HasOne("AppAvanza.Domain.Entities.Aprendiz", "Aprendiz")
                        .WithMany("Logros")
                        .HasForeignKey("AprendizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aprendiz");
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.ProgresoHito", b =>
                {
                    b.HasOne("AppAvanza.Domain.Entities.Aprendiz", "Aprendiz")
                        .WithMany("ProgresosHitos")
                        .HasForeignKey("AprendizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppAvanza.Domain.Entities.HitoDeDominio", "HitoDeDominio")
                        .WithMany("ProgresosHitos")
                        .HasForeignKey("HitoDeDominioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aprendiz");

                    b.Navigation("HitoDeDominio");
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.RegistroDiario", b =>
                {
                    b.HasOne("AppAvanza.Domain.Entities.Aprendiz", "Aprendiz")
                        .WithMany("RegistrosDiarios")
                        .HasForeignKey("AprendizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aprendiz");
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.Aprendiz", b =>
                {
                    b.Navigation("ElementosParking");

                    b.Navigation("Logros");

                    b.Navigation("ProgresosHitos");

                    b.Navigation("RegistrosDiarios");
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.HitoDeDominio", b =>
                {
                    b.Navigation("ProgresosHitos");
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.Nivel", b =>
                {
                    b.Navigation("ActividadesSemanales");

                    b.Navigation("AprendicesEnEsteNivel");

                    b.Navigation("HitosDeDominio");
                });

            modelBuilder.Entity("AppAvanza.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Aprendices");
                });
#pragma warning restore 612, 618
        }
    }
}
